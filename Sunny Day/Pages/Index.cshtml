@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center mb-lg-3 mb-md-5 mb-10">
    <h1 class="display-4" style="color:#6ca6e0;">Welcome</h1>
</div>
<div class="border-line"></div>
<div class="d-flex flex-column">
    @foreach (var rainfall in Model.Rainfalls)
    {
        int currentCount = 0;
        int longestCount = 0;
        int currentStartTime = 0;
        int longestStartTime = 0;
        int currentEndTime = 0;
        int longestEndTime = 0;
        <div class="d-flex justify-content-evenly flex-row align-content-center">
        <div class="weather-graph d-flex justify-content-evenly flex-row order-2">
            
            @for (int i = 0; i < rainfall.dimensions.time.data.Length; i++)
            {
                int time = @rainfall.dimensions.time.data[i].Hour;
                <div class="rain-bar p-2">
                    <div>
                        @if (rainfall.variables.precipitationRate.data[i] >= 0.05)
                        {

                            <i class="bi bi-cloud-rain-fill text-primary"></i>

                        }
                        else
                        {

                            <i class="bi bi-brightness-high-fill text-warning"></i>



                            int previousItem = 0;
                            if (i > 0)
                            {
                                previousItem = i - 1;
                            }

                            if (rainfall.variables.precipitationRate.data[previousItem] < 0.05)
                            {
                                currentCount++;
                                currentEndTime = time;
                            }
                            else
                            {
                                currentCount = 1;
                                currentStartTime = @time;
                                currentEndTime = @time;
                            }
                            if (currentCount >= longestCount)
                            {
                                longestCount = currentCount;
                                longestStartTime = currentStartTime;
                                longestEndTime = currentEndTime;
                            }
                        }
                    </div>
                    <div class="time-of-day">
                        <p>  
                           @convertHour(time, false)
                            
                        </p>
                    </div>
                </div>
            }
        </div>

        <div class="d-flex order-3">
            <div class="card">
                <div class="selected-day"> <h2>@rainfall.title</h2> </div>
                <div>@longestCount hrs </div>
            </div>
            <div class="card d-flex order-1">
                <div>Monday</div>
            <div>
                @convertHour(longestStartTime, true) - @convertHour(longestEndTime, true)
            </div></div>
          
        </div>

    }
</div>
</div>
@functions{


    public string convertHour(int hour, bool showAMPM)
    {
        string timeFormat;
        if (hour > 12)
        {
            timeFormat = (hour - 12).ToString();
            if (showAMPM)
            {
                timeFormat = timeFormat + " pm";
            }
        }
        else
        {
            timeFormat = hour.ToString();
            if (showAMPM)
            {
                timeFormat = timeFormat + " am";
            }
        }
        return timeFormat;
    }


    //  >0.5mm = sunny}
}

